to-report transition-odm [s]
  if s = healthy-infection-status [report stochastic-fsm-transition (list (list healthy-infection-status 1))]
  if s = immune-infection-status [report stochastic-fsm-transition (list (list immune-infection-status 1))]
  if s = dead-infection-status [report stochastic-fsm-transition (list (list dead-infection-status 1))]
  if s = just-contaminated-infection-status [
    report stochastic-fsm-transition (list 
      (list timed-state asymptomatic-to-rec-infection-status tau-a-rec p-asymptomatic-odm )
      (list timed-state pre-symptomatic-to-mild-infection-status tau-pre-mild p-pre-symptomatic-mild-odm)
      (list timed-state pre-symptomatic-to-severe-infection-status tau-pre-severe)
    )
  ]
  if is-timed-state? s and time-of-timed-state s > 0 [
    report stochastic-fsm-transition (list 
    (list timed-state state-of-timed-state s (time-of-timed-state s - 1)))
  ]
  
  if state-of-timed-state s = asymptomatic-to-rec-infection-status
  or state-of-timed-state s = mild-to-rec-infection-status
  or state-of-timed-state s = severe-to-rec-infection-status  
  or state-of-timed-state s = hospital-to-rec-infection-status
  [report stochastic-fsm-transition (list (list immune-infection-status 1))]
  
  if state-of-timed-state s = hospital-to-death-infection-status[ report stochastic-fsm-transition (list (list dead-infection-status 1))]
  
  if state-of-timed-state s = pre-symptomatic-to-mild-infection-status [report stochastic-fsm-transition (list (list timed-state symptomatic-mild-infection-status tau-mild))]
  if state-of-timed-state s = pre-symptomatic-to-severe-infection-status [report stochastic-fsm-transition (list (list timed-state symptomatic-severe-infection-status tau-severe))]
  
  if state-of-timed-state s = symptomatic-severe-infection-status [report stochastic-fsm-transition (list
    (list timed-state severe-to-hospital-infection-status tau-hosp p-hosp)
    (list timed-state severe-to-rec-infection-status tau-severe-recover)
  )]
  
  if state-of-timed-state s = symptomatic-mild-infection-status [report stochastic-fsm-transition (list
    (list timed-state mild-to-rec-infection-status tau-mild-recover)
  )]
  
  if state-of-timed-state s = severe-to-hospital-infection-status [report stochastic-fsm-transition (list
    (list timed-state hospital-to-rec-infection-status tau-hosp-rec p-survival-in-hospital)
    (list timed-state hospital-to-death-infection-status tau-hospital-to-death)
  )]
  
  error (sentence "unimplemented" s)
end

to-report next-state-odm [s]
  report stochastic-transition-apply transition-odm s
end

;these numbers are made up from general statistics as we don't have the oxford model. I.e. most children are asymptomatic
;altogether we have young: 0.6 asymptomatic; 0.3 mild; 0.1 severe [among which 0.1 will die]
;altogether we have student & worker: 0.3 asymptomatic; 0.6 mild; 0.1 severe [among which 0.1 will die]
;altogether we have young: 0.1 asymptomatic; 0.3 mild; 0.6 severe [among which 0.4 will die]
to-report p-asymptomatic-odm 
  if is-young?   [report cbt-p-asymptomatic-young] 
  if is-student? [report cbt-p-asymptomatic-student] 
  if is-worker?  [report cbt-p-asymptomatic-worker]
  if is-retired? [report cbt-p-asymptomatic-retired]
end

;these numbers are made up from general statistics as we don't have the oxford model. I.e. most children are asymptomatic
to-report p-pre-symptomatic-mild-odm
  if is-young?   [report cbt-p-mild-young] 
  if is-student? [report cbt-p-mild-student] 
  if is-worker?  [report cbt-p-mild-worker]
  if is-retired? [report cbt-p-mild-retired]
end

to-report p-hosp
  if is-young?   [report cbt-p-hospital-young] 
  if is-student? [report cbt-p-hospital-student] 
  if is-worker?  [report cbt-p-hospital-worker]
  if is-retired? [report cbt-p-hospital-retired]
end

to-report tau-hosp
  let mean-val     cbt-tau-severe-hospital-mean
  let variance-val cbt-tau-severe-hospital-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )
end

to-report tau-hosp-rec
  let mean-val     cbt-tau-hospital-recover-mean
  let variance-val cbt-tau-hospital-recover-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )
end

to-report tau-hospital-to-death
  let mean-val     cbt-tau-hospital-death-mean
  let variance-val cbt-tau-hospital-death-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )
end

to-report p-survival-in-hospital
  if is-young?   [report cbt-p-survive-young] 
  if is-student? [report cbt-p-survive-student] 
  if is-worker?  [report cbt-p-survive-worker]
  if is-retired? [report cbt-p-survive-retired]
end

to-report tau-a-rec
  let mean-val     cbt-tau-asymptomatic-mean
  let variance-val cbt-tau-asymptomatic-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )
end

to-report tau-pre-mild
  let mean-val     cbt-tau-pre-mild-mean 
  let variance-val cbt-tau-pre-mild-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )

end
to-report tau-mild
  let mean-val     cbt-tau-mild-mean
  let variance-val cbt-tau-mild-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )

end
to-report tau-mild-recover
  let mean-val     cbt-tau-mild-recover-mean
  let variance-val cbt-tau-mild-recover-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )
end
to-report tau-pre-severe
  let mean-val     cbt-tau-pre-severe-mean
  let variance-val cbt-tau-pre-severe-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )

end
to-report tau-severe
  let mean-val     cbt-tau-severe-mean
  let variance-val cbt-tau-severe-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )

end
to-report tau-severe-recover
  let mean-val     cbt-tau-severe-recover-mean
  let variance-val cbt-tau-severe-recover-variance
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val))  * #ticks-per-day )

end